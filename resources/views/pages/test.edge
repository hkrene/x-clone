<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Twitter Home Page</title>
    <script src="https://cdn.tailwindcss.com"></script> 
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
</head>
<body class="bg-black text-white flex min-h-screen max-w-7xl mx-auto">

    {{--  <!-- Left Sidebar  -->
    <section class="hidden md:block w-[88px] lg:w-[275px] min-h-screen px-2 border-r border-gray-800 sticky top-0 overflow-y-auto h-screen">
        <div class="flex flex-col h-full justify-between py-4"> 
            
            <div class="space-y-2">  --}}
                <!-- Twitter Logo -->
                {{--  <div class="p-3 hover:bg-gray-900 rounded-full cursor-pointer mx-auto lg:mx-0 md:ml-2">
                    <img src="{{asset('icons/Twitter.svg')}}" class="w-6 lg:w-10" alt="Twitter Logo">
                </div>  --}}

                <!-- Navbar-->
                {{--  <nav class="space-y-1 w-full mt-2">
                    <a href="#" class="flex justify-center lg:justify-start items-center space-x-4 p-3 hover:bg-gray-900 rounded-full">
                        <img src="{{asset('icons/Home-Fill.svg')}}" class="w-6 h-6" alt="Home">
                        <span class="text-xl hidden lg:block">Home</span>
                    </a>
                    <a href="#" class="flex items-center space-x-4 p-3 hover:bg-gray-900 rounded-full justify-center lg:justify-start">
                        <img src="{{asset('icons/Fill.svg')}}" class="w-6 h-6" alt="Explore">
                        <span class="capitalize hidden lg:block">explore</span>
                    </a>
                    <a href="#" class="flex items-center space-x-4 p-3 hover:bg-gray-900 rounded-full justify-center lg:justify-start">
                        <img src="{{asset('icons/Notifications-Fill.svg')}}" class="w-6 h-6" alt="Notifications">
                        <span class="capitalize hidden lg:block">notifications</span>
                    </a>
                    <a href="#" class="flex items-center space-x-4 p-3 hover:bg-gray-900 rounded-full justify-center lg:justify-start">
                        <img src="{{asset('icons/Messages-Fill.svg')}}" class="w-6 h-6" alt="Messages">
                        <span class="capitalize hidden lg:block">message</span>
                    </a>
                    <a href="#" class="flex items-center space-x-4 p-3 hover:bg-gray-900 rounded-full justify-center lg:justify-start">
                        <img src="{{asset('icons/Bookmarks-Fill.svg')}}" class="w-6 h-6" alt="Bookmarks">
                        <span class="capitalize hidden lg:block">bookmarks</span>
                    </a>
                    <a href="#" class="flex items-center space-x-4 p-3 hover:bg-gray-900 rounded-full justify-center lg:justify-start">
                        <img src="{{asset('icons/Lists-Fill.svg')}}" class="w-6 h-6" alt="Lists">
                        <span class="capitalize hidden lg:block">lists</span>
                    </a>
                    <a href="#" class="flex items-center space-x-4 p-3 hover:bg-gray-900 rounded-full justify-center lg:justify-start">
                        <img src="{{asset('icons/Profile-Fill.svg')}}" class="w-6 h-6" alt="Profile">
                        <span class="capitalize hidden lg:block">profile</span>
                    </a>
                    <a href="#" class="flex items-center space-x-4 p-3 hover:bg-gray-900 rounded-full justify-center lg:justify-start">
                        <img src="{{asset('icons/More.svg')}}" class="w-6 h-6" alt="More">
                        <span class="capitalize hidden lg:block">more</span>
                    </a>
                </nav>

                <button class="w-full bg-blue-500 hover:bg-blue-600 text-white font-bold py-3 rounded-full mt-4 capitalize hidden lg:block transition-colors">
                    Tweet
                </button>
            </div>  --}}

            <!-- Profile Section - Sticks to Bottom -->
            {{--  <div class="p-3 hover:bg-gray-900 rounded-full cursor-pointer w-full">
                <div class="flex justify-between items-center">
                    <div class="flex items-center space-x-3">
                        <img src="{{asset('image/profile0.png')}}" alt="Profile" class="w-10 h-10 rounded-full">
                        <div class="hidden lg:block">
                            <div class="flex items-center gap-1">
                                <p class="text-sm font-medium">Bradley Ortiz</p>
                                <img src="{{ asset('icons/Private.svg')}}" class="w-4 h-4" alt="Verified">
                            </div>
                            <p class="text-gray-500 text-sm">@bradley_</p>
                        </div>
                    </div>
                    <img src="{{asset('icons/More-2.png')}}" class="hidden lg:block" alt="More options">
                </div>
            </div>
        </div>
    </section>  --}}

    <!-- Main Content-->
    <main class="flex-1 border-x border-gray-800 max-w-2xl w-full">
        <header class="sticky top-0 bg-black/80 backdrop-blur-md border-b border-gray-800 p-4 flex justify-between z-10">
            <h1 class="text-xl font-bold">Home</h1>
            <img src="{{asset('icons/Timeline-Prop.svg')}}" class="w-5 h-5" alt="">
        </header>

        <!-- new tweet textarea -->
        <div class="flex space-x-3 px-4 pt-4 pb-2 border-b border-gray-800">
            <div class="flex-shrink-0 w-12 h-12 rounded-full overflow-hidden">
                <img src="{{asset('image/profile0.png')}}" alt="User profile" class="w-full h-full object-cover">
            </div>

            <!-- Tweet Form -->
            <form action="" method="post" class="flex-1">
                {{ csrfField() }}
                
                <textarea 
                    name="tweet" 
                    placeholder="What's happening?"
                    class="w-full bg-transparent text-white text-xl outline-none placeholder-gray-500 resize-none pt-3 min-h-[60px]"
                ></textarea>
                
                <div class="flex items-center justify-between pt-2 pb-1">
                    <div class="flex space-x-1">
                        <button class="">
                            <img src="{{asset('icons/Top-Tweets.svg')}}" alt="Media" class="">
                        </button>
                        <button class="">
                            <img src="{{asset('icons/gif.svg')}}" alt="GIF" class="">
                        </button>
                        <button class="">
                            <img src="{{asset('icons/poll.svg')}}" alt="Poll" class="">
                        </button>
                        <button class="">
                            <img src="{{asset('icons/emoji.svg')}}" alt="Emoji" class="">
                        </button>
                        <button class="">
                            <img src="{{asset('icons/schedule.svg')}}" alt="Schedule" class="">
                        </button>
                    </div>
                    
                    <button type="submit" class="bg-blue-500 hover:bg-blue-600 text-white text-sm font-bold rounded-full px-4 py-1.5 capitalize">
                        Tweet
                    </button>
                </div>
            </form>
        </div>

        <!-- Tweet content-->
        <div class="divide-y divide-gray-800">
            
            <!-- CNN  -->
            <div class="p-4 hover:bg-gray-900/50 cursor-pointer">
                <div class="flex space-x-3">
                    <div class="flex-shrink-0 w-12 h-12 rounded-full overflow-hidden">
                        <img src="{{asset('image/cnn.png')}}" alt="CNN profile" class="w-full h-full object-cover">
                    </div>
                    
                    <div class="flex-1 min-w-0">
                        <div class="flex items-center space-x-1">
                            <span class="font-bold text-white">CNN</span>
                            <img src="{{ asset('icons/Verified.svg')}}" alt="Verified" class="w-4 h-4">
                            <span class="text-gray-500">@CNN .</span>
                            <span class="text-gray-500">7m</span>
                        </div>
                        <p class="mt-1 text-white text-base leading-snug">
                            President Joe Biden touted a new agreement reached with the European Union to ease Trump-era tariffs on aluminum and steel as a "major breakthrough" that would serve to both strengthen the US steel industry and combat the global climate crisis.
                        </p>
            
                        <div class="flex items-center justify-between mt-3 text-gray-500 max-w-md">
                            <button class="flex items-center space-x-1 group">
                                <div class="p-2 rounded-full group-hover:bg-blue-900/20">
                                    <img src="{{asset('icons/Reply.svg')}}" alt="Reply" class="w-5 h-5">
                                </div>
                                <span class="text-xs hover:text-blue-500">57</span>
                            </button>
                            <button class="flex items-center space-x-1 group">
                                <div class="p-2 rounded-full group-hover:bg-green-900/20">
                                    <img src="{{asset('icons/Retweet.svg')}}" alt="Retweet" class="w-5 h-5">
                                </div>
                                <span class="text-xs hover:text-green-500">144</span>
                            </button>
                            <button class="flex items-center space-x-1 group">
                                <div class="p-2 rounded-full group-hover:bg-red-900/20">
                                    <img src="{{asset('icons/React.svg')}}" alt="Like" class="w-5 h-5">
                                </div>
                                <span class="text-xs hover:text-red-500">184</span>
                            </button>
                            <button class="flex items-center space-x-1 group">
                                <div class="p-2 rounded-full group-hover:bg-blue-900/20">
                                    <img src="{{asset('icons/Share.svg')}}" alt="Share" class="w-5 h-5">
                                </div>
                            </button>
                        </div>
                    </div>
                </div>
            </div>

                <!-- NY Times -->
            <div class="p-4 hover:bg-gray-900/50 cursor-pointer ">
                <div class="flex space-x-3">
                    <div class="flex-shrink-0 w-12 h-12 rounded-full overflow-hidden">
                        <img src="{{asset('image/nyt.png')}}" alt="New york Times" class="w-full h-full object-cover">
                    </div>
                    
                    <div class="flex-1 min-w-0">
                        <div class="flex items-center space-x-1">
                            <span class="font-bold text-white">The New York Times</span>
                            <img src="{{ asset('icons/Verified.svg')}}" alt="Verified" class="w-4 h-4">
                            <span class="text-gray-500">@nytimes .</span>
                            <span class="text-gray-500"> 2h</span>
                        </div>

                        <p class="mt-1 text-white text-base leading-snug">
                            Gardening boomed during the pandemic. Six Black writers share how it has helped them re-establish, and reimagine, a connection to cultivation and the land
                        </p>
            
                        <div class="mt-3 rounded-xl overflow-hidden border border-gray-800">
                            <img src="{{asset('image/leaf.png')}}" alt="News image" class="w-full h-auto">
                        </div>

                        <div class="flex items-center justify-between mt-3 text-gray-500 max-w-md">
                            <button class="flex items-center space-x-1 group">
                                <div class="p-2 rounded-full group-hover:bg-blue-900/20">
                                    <img src="{{asset('icons/Reply.svg')}}" alt="Reply" class="w-5 h-5">
                                </div>
                                <span class="text-xs hover:text-blue-500">19</span>
                            </button>
                            <button class="flex items-center space-x-1 group">
                                <div class="p-2 rounded-full group-hover:bg-green-900/20">
                                    <img src="{{asset('icons/Retweet.svg')}}" alt="Retweet" class="w-5 h-5">
                                </div>
                                <span class="text-xs hover:text-green-500">48</span>
                            </button>
                            <button class="flex items-center space-x-1 group">
                                <div class="p-2 rounded-full group-hover:bg-red-900/20">
                                    <img src="{{asset('icons/React.svg')}}" alt="Like" class="w-5 h-5">
                                </div>
                                <span class="text-xs hover:text-red-500">482</span>
                            </button>
                            <button class="flex items-center space-x-1 group">
                                <div class="p-2 rounded-full group-hover:bg-blue-900/20">
                                    <img src="{{asset('icons/Share.svg')}}" alt="Share" class="w-5 h-5">
                                </div>
                            </button>
                        </div>
                    </div>
                    
                </div>
            </div>

        {{--  Twitter first post  --}}
        <div class="p-4 hover:bg-gray-900 cursor-pointer">
            <div class="flex space-x-3">

                <div class="flex-shrink-0 w-12 h-12 rounded-full overflow-hidden">
                    <img src="{{asset('image/twitter-logo.png')}}" alt="Twitter logo" class="w-full h-full object-cover">
                </div>
                
                <div class="flex-1 min-w-0">
                    <div class="flex items-center space-x-1">
                        <span class="font-bold text-white">Twitter</span>
                        <img src="{{ asset('icons/Verified.svg')}}" alt="Verified" class="w-4 h-4">
                        <span class="text-gray-500">@Twitter ·</span>
                        <span class="text-gray-500">Oct 4</span>
                    </div>
                    <p class="mt-1 text-white text-base leading-snug">
                        <span class="uppercase">big news</span> lol jk still Twitter
                    </p>

                    <div class="flex items-center justify-between mt-3 text-gray-500 max-w-md">
                        <button class="flex items-center space-x-1 group">
                            <div class="p-2 rounded-full group-hover:bg-blue-900/20">
                                <img src="{{asset('icons/Reply.svg')}}" alt="Reply" class="w-5 h-5">
                            </div>
                            <span class="text-xs hover:text-blue-500">6.8K</span>
                        </button>
                        <button class="flex items-center space-x-1 group">
                            <div class="p-2 rounded-full group-hover:bg-green-900/20">
                                <img src="{{asset('icons/Retweet.svg')}}" alt="Retweet" class="w-5 h-5">
                            </div>
                            <span class="text-xs hover:text-green-500">36.6K</span>
                        </button>
                        <button class="flex items-center space-x-1 group">
                            <div class="p-2 rounded-full group-hover:bg-red-900/20">
                                <img src="{{asset('icons/React.svg')}}" alt="Like" class="w-5 h-5">
                            </div>
                            <span class="text-xs hover:text-red-500">267.1K</span>
                        </button>
                        <button class="flex items-center space-x-1 group">
                            <div class="p-2 rounded-full group-hover:bg-blue-900/20">
                                <img src="{{asset('icons/Share.svg')}}" alt="Share" class="w-5 h-5">
                            </div>
                        </button>
                    </div>
                </div>
                
            </div>
        </div>

        {{--  Twitter second post  --}}
        <div class="p-4 hover:bg-gray-900 cursor-pointer">
            <div class="flex space-x-3">

                <div class="flex-shrink-0 w-12 h-12 rounded-full overflow-hidden">
                    <img src="{{asset('image/twitter-logo.png')}}" alt="Twitter logo" class="w-full h-full object-cover">
                </div>
                
                <div class="flex-1 min-w-0">
                    <div class="flex items-center space-x-1">
                        <span class="font-bold text-white">Twitter</span>
                        <img src="{{ asset('icons/Verified.svg')}}" alt="Verified" class="w-4 h-4">
                        <span class="text-gray-500">@Twitter ·</span>
                        <span class="text-gray-500">Oct 29</span>
                    </div>
                    <p class="mt-1 text-white text-base lowercase leading-snug">
                        Hello literally everyone
                    </p>

                    <div class="flex items-center justify-between mt-3 text-gray-500 max-w-md">
                        <button class="flex items-center space-x-1 group">
                            <div class="p-2 rounded-full group-hover:bg-blue-900/20">
                                <img src="{{asset('icons/Reply.svg')}}" alt="Reply" class="w-5 h-5">
                            </div>
                            <span class="text-xs hover:text-blue-500">118.7K</span>
                        </button>
                        <button class="flex items-center space-x-1 group">
                            <div class="p-2 rounded-full group-hover:bg-green-900/20">
                                <img src="{{asset('icons/Retweet.svg')}}" alt="Retweet" class="w-5 h-5">
                            </div>
                            <span class="text-xs hover:text-green-500">785.4K</span>
                        </button>
                        <button class="flex items-center space-x-1 group">
                            <div class="p-2 rounded-full group-hover:bg-red-900/20">
                                <img src="{{asset('icons/React.svg')}}" alt="Like" class="w-5 h-5">
                            </div>
                            <span class="text-xs hover:text-red-500">3.3M</span>
                        </button>
                        <button class="flex items-center space-x-1 group">
                            <div class="p-2 rounded-full group-hover:bg-blue-900/20">
                                <img src="{{asset('icons/Share.svg')}}" alt="Share" class="w-5 h-5">
                            </div>
                        </button>
                    </div>
                </div>
            </div>
        </div>


                <!-- NY Times Nasdak-->
        <div class="p-4 hover:bg-gray-900/50 cursor-pointer ">
            <div class="flex space-x-3">
                <div class="flex-shrink-0 w-12 h-12 rounded-full overflow-hidden">
                    <img src="{{asset('image/nyt.png')}}" alt="New york Times" class="w-full h-full object-cover">
                </div>
                
                <div class="flex-1 min-w-0">
                    <div class="flex items-center space-x-1">
                        <span class="font-bold text-white">The New York Times</span>
                        <img src="{{ asset('icons/Verified.svg')}}" alt="Verified" class="w-4 h-4">
                        <span class="text-gray-500">@nytimes .</span>
                        <span class="text-gray-500"> 2h</span>
                    </div>

                    <p class="mt-1 text-white text-base leading-snug">
                        This is not Bitcoin, Ethereum or even a shitcoin. It’s the US 10Y note
                    </p>
        
                    <div class="mt-3 rounded-xl overflow-hidden border border-gray-800">
                        <img src="{{asset('image/nasdak.jpeg')}}" alt="News image" class="w-full h-auto">
                    </div>

                    <div class="flex items-center justify-between mt-3 text-gray-500 max-w-md">
                        <button class="flex items-center space-x-1 group">
                            <div class="p-2 rounded-full group-hover:bg-blue-900/20">
                                <img src="{{asset('icons/Reply.svg')}}" alt="Reply" class="w-5 h-5">
                            </div>
                            <span class="text-xs hover:text-blue-500">75</span>
                        </button>
                        <button class="flex items-center space-x-1 group">
                            <div class="p-2 rounded-full group-hover:bg-green-900/20">
                                <img src="{{asset('icons/Retweet.svg')}}" alt="Retweet" class="w-5 h-5">
                            </div>
                            <span class="text-xs hover:text-green-500">56</span>
                        </button>
                        <button class="flex items-center space-x-1 group">
                            <div class="p-2 rounded-full group-hover:bg-red-900/20">
                                <img src="{{asset('icons/React.svg')}}" alt="Like" class="w-5 h-5">
                            </div>
                            <span class="text-xs hover:text-red-500">641</span>
                        </button>
                        <button class="flex items-center space-x-1 group">
                            <div class="p-2 rounded-full group-hover:bg-blue-900/20">
                                <img src="{{asset('icons/Share.svg')}}" alt="Share" class="w-5 h-5">
                            </div>
                        </button>
                    </div>
                </div>
                
            </div>
        </div>

        </div>

    </main>



    <!-- Right Sidebar -->
    {{--  <section class="hidden lg:block w-[370px] min-h-screen p-4 border-l border-gray-800 sticky top-0 overflow-y-auto h-screen">

        <div class="mb-4 relative">

            <div class="relative">
                <div class="absolute inset-y-0 left-0 pl-4 flex items-center">
                    <img src="{{asset('icons/Search.svg')}}" class="w-5 h-5" alt="Search icon">
                </div>
                
                <input 
                    type="text" 
                    placeholder="Search Twitter" 
                    class="w-full bg-[rgb(32,35,39)] rounded-full pl-12 pr-5 py-3 text-white placeholder-gray-500"
                >
            </div>
        </div>  --}}

        <!-- Trends Section -->
        {{--  <div class="bg-[rgb(32,35,39)] rounded-2xl mb-6 overflow-hidden">
            <div class="flex justify-between items-center p-4">
                <h2 class=" text-xl font-bold">Trends for you</h2>
            <img src="{{asset('icons/Settings.svg')}}" class="cursor-pointer pr-4" alt="Setting icon">
            </div>
            <div class="space-y-4">
                <div class="px-4 hover:bg-gray-800 pointer-cursor flex justify-between">
                    <div class="space-y-[1px]">
                        <div class="text-sm text-gray-500">Trending in Turkey</div>
                        <div class="font-bold uppercase">#squid</div>
                        <div class="text-sm text-gray-500">2,066 Tweets</div>
                    </div>
                    <i class="bi bi-three-dots text-xl"></i>
                </div>
                <div class="px-4 hover:bg-gray-800 cursor-pointer flex justify-between">
                    <div class="space-y-[1px]">
                        <div class="text-sm text-gray-500">Trending in Turkey</div>
                        <div class="font-bold uppercase">#squid</div>
                        <div class="text-sm text-gray-500">2,066 Tweets</div>
                    </div>
                    <i class="bi bi-three-dots text-xl"></i>
                </div>
                <div class="px-4 hover:bg-gray-800 cursor-pointer flex justify-between">
                    <div class="space-y-[1px]">
                        <div class="text-sm text-gray-500">Trending in Turkey</div>
                        <div class="font-bold uppercase">#squid</div>
                        <div class="text-sm text-gray-500">2,066 Tweets</div>
                    </div>
                    <i class="bi bi-three-dots text-xl"></i>
                </div>
                <div class="px-4 hover:bg-gray-800 cursor-pointer flex justify-between">
                    <div class="space-y-[1px]">
                        <div class="text-sm text-gray-500">Trending in Turkey</div>
                        <div class="font-bold uppercase">#squid</div>
                        <div class="text-sm text-gray-500">2,066 Tweets</div>
                    </div>
                    <i class="bi bi-three-dots text-xl"></i>
                </div>
                <button class="font-bold text-blue-500 px-4 pb-4">
                    show more
                </button>
            </div>
        </div>  --}}


        {{--  who to follow   --}}
        {{--  <div class="bg-[rgb(32,35,39)] rounded-xl overflow-hidden">
            <div class="max-w-md mx-auto p-4">
                <div class="flex justify-between items-center mb-4">
                    <h2 class="text-xl font-bold">Who to follow</h2>
                </div>

                <div class="space-y-4">
                    
                    <div class="flex justify-between items-center">
                        <div class="flex items-center space-x-3">
                        <img src="{{asset('image/nyt.png')}}" alt="new york times logo">
                            <div>
                                <div class="flex items-center gap-[3px]">
                                    <p class="capitalize text-sm hover:underline">the new york times</p>
                                    <img src="{{ asset('icons/Verified.svg')}}" class="w-4 h-4" alt="cnn logo">
                                </div>
                                <p class="text-gray-500">@nytimes</p>
                            </div>
                        </div>
                        <button class="bg-white text-black px-4 py-1 rounded-full text-sm">
                            Follow
                        </button>
                        
                    </div>

                    <div class="flex justify-between items-center">
                        <div class="flex items-center space-x-3">
                        <img src="{{asset('image/cnn.png')}}" alt="CNN logo">
                            <div>
                               <div class="flex items-center gap-[3px]">
                                <p class="text-sm hover:underline">CNN</p>
                                <img src="{{ asset('icons/Verified.svg')}}" class="w-4 h-4" alt="cnn logo">
                               </div>
                                <p class="text-gray-500 text-sm">@CNN</p>
                            </div>
                        </div>
                        <button class="bg-white text-black px-4 py-1 rounded-full text-sm">
                            Follow
                        </button>
                    </div>

                    <div class="flex justify-between items-center">
                        <div class="flex items-center space-x-3">
                        <img src="{{asset('image/twitter-logo.png')}}" alt="CNN logo">
                            <div>
                               <div class="flex items-center gap-[3px]">
                                <p class="text-sm hover:underline">Twitter</p>
                                <img src="{{ asset('icons/Verified.svg')}}" class="w-4 h-4" alt="cnn logo">
                               </div>
                                <p class="text-gray-500 text-sm">@Twitter</p>
                            </div>
                        </div>
                        <button class="bg-white text-black px-4 py-1 rounded-full text-sm">
                            Follow
                        </button>
                    </div>
                </div>
                <div class="mt-4">
                    <a href="#" class="text-blue-500 hover:underline font-bold">Show more</a>
                </div>
            </div>
        </div>  --}}

        <!-- Links -->
        {{--  <div class="mt-4 text-xs text-gray-600 px-4">
            <div class="flex flex-wrap gap-x-4 gap-y-1 px-2">
                <a href="#" class="hover:underline">Terms of Service</a>
                <a href="#" class="hover:underline">Privacy Policy</a>
                <a href="#" class="hover:underline">Cookie Policy</a>
                <a href="#" class="hover:underline">Imprint</a>
                <a href="#" class="hover:underline">Ads Info</a>
                <a href="#" class="hover:underline">More...</a>
                <span>&copy; 2021 Twitter, Inc.</span>
            </div>
        </div>
    </section>  --}}
</body>
</html>






import { BaseSchema } from '@adonisjs/lucid/schema'

export default class extends BaseSchema {
  protected tableName = 'users'

  async up() {
    this.schema.createTable('users', (table) => {
      table.increments('id').primary()
      table.string('username', 50).nullable().unique()
      table.string('email', 50).notNullable().unique()
      table.string('password').notNullable()
      table.string('fullname', 25).notNullable() 
      table.string('surname',20).nullable()               // Surname
      table.string('first_name', 20).nullable    // Full name
      table.date('date_of_birth').nullable()             // Date of birth
      table.string('city', 100).nullable()               // City
      table.string('website', 255).nullable()            // Website URL
      table.string('avatar', 255).nullable()                  // Profile image
      table.string('banner_image', 255).nullable()        // Banner image
      table.string('bio', 100).nullable()
      table.boolean('is_verified').defaultTo(false)      // Verification status
      table.boolean('is_private').defaultTo(false)       // Privacy status
      table.integer('followers_count').defaultTo(0)      // Followers count
      table.integer('following_count').defaultTo(0)      // Following count
      table.integer('posts_count').defaultTo(0)          // Posts count
      table.timestamps(true)
    })
    
    
  }

  async down() {
    this.schema.dropTable(this.fullname)
    
  }
}



dateOfBirth: payload.dateOfBirth ? DateTime.fromJSDate(payload.dateOfBirth) : null,
city: payload.city,
website: payload.website,
bio: payload.bio,
isVerified: payload.isVerified,
isPrivate: payload.isPrivate,
followersCount: payload.followersCount,
followingCount: payload.followingCount,
postsCount: payload.postsCount,
avatar: '', // you'll need to handle uploaded file URL if provided
bannerImage: '',


validator 


dateOfBirth: vine.date().nullable(), // Optional, can be null
city: vine.string().trim().maxLength(100).nullable(),
website: vine.string().trim().url().maxLength(255).nullable(),
avatar: vine
.file({
  size: '2mb',
  extnames: ['jpg', 'png', 'jpeg', 'webp'],
})
.nullable(),

bannerImage: vine
.file({
  size: '5mb',
  extnames: ['jpg', 'png', 'jpeg', 'webp'],
})
.nullable(),
bio: vine.string().trim().maxLength(100).nullable(),
isVerified: vine.boolean(),
isPrivate: vine.boolean(),
followersCount: vine.number().withoutDecimals(),
followingCount: vine.number().withoutDecimals(),
postsCount: vine.number().withoutDecimals(),










--user controller--

import Commentaire from '#models/commentaire'
import Following from '#models/following'
import Like from '#models/like'
import Publication from '#models/publication'
import Retweet from '#models/retweet'
import User from '#models/user'
import { cuid } from '@adonisjs/core/helpers'
import type { HttpContext } from '@adonisjs/core/http'
import app from '@adonisjs/core/services/app'

export default class UsersController {
  async create({ request, response, auth }: HttpContext) {
    let data = request.only(['nom', 'prenom', 'email', 'password'])

    await User.create({
      nom: data.nom,
      prenom: data.prenom,
      email: data.email,
      password: data.password,
    })

    const user = await User.verifyCredentials(data.email, data.password)

    await auth.use('web').login(user)

    response.redirect('/')
  }
  async connexion({ request, auth, response }: HttpContext) {
    const data = request.all()

    const user = await User.verifyCredentials(data.email, data.password)

    await auth.use('web').login(user)

    response.redirect('/')
  }
  async uptade({ request, response, auth }: HttpContext) {
    let nom = request.input('nom')
    let prenom = request.input('prenom')
    let localisation = request.input('localisation')
    let biographie = request.input('biographie')
    let lien = request.input('lien')
    let photoDeProfil = request.file('photoDeProfil')
    let photoDeCouverture = request.file('photoDeCouverture')
    let user = await User.findOrFail(auth.user?.id)

    if (nom) {
      user.nom = nom
    }
    if (prenom) {
      user.prenom = prenom
    }
    if (prenom) {
      user.localisation = localisation
    }
    if (biographie) {
      user.biographie = biographie
    }
    if (lien) {
      user.lien = lien
    }
    if (photoDeProfil) {
      await photoDeProfil.move(app.makePath('public/uploads'), {
        name: `${cuid()}.${photoDeProfil.extname}`,
      })
      let photo = photoDeProfil?.fileName
      user.photoDeProfil = String(photo)
    }
    if (photoDeCouverture) {
      await photoDeCouverture.move(app.makePath('public/uploads'), {
        name: `${cuid()}.${photoDeCouverture.extname}`,
      })
      let photo = photoDeCouverture?.fileName
      user.photoDeCouverture = String(photo)
    }

    await user.save()

    response.redirect().back()
  }

  async profilUtilisateur({ view, params, auth }: HttpContext) {
    let id = params.id
    let users = User.findOrFail(id)

    const abonné = await Following.query()
      .where('id_utilisateur_abonnement', id)
      .count('* as total1')
    const total1 = abonné[0].$extras.total1
    const abonnement = await Following.query().where('id_utilisateur', id).count('* as total2')
    const total2 = abonnement[0].$extras.total2

    const count = await Publication.query().where('id_utilisateur', id).count('* as total')
    const totalPost = count[0].$extras.total

    const publication = await Publication.query()
      .where('id_utilisateur', id)
      .preload('retweet', (e) => {
        e.preload('publication')
      })

    const existeOuPaslikeVerifie = await Like.findManyBy('id_utilisateur_like', auth.user?.id)
    const existeOuPasCommentaireVerifie = await Commentaire.findManyBy(
      'id_utilisateur',
      auth.user?.id
    )
    const existeOuPasretweetVerifie = await Retweet.findManyBy(
      'id_utilisateur_retweet',
      auth.user?.id
    )
    const existeAbonne = await Following.findManyBy('id_utilisateur', auth.user?.id)

    let likeVerifie = []
    let CommentaireVerifie = []
    let retweetVerifie = []
    let tableauAbonnement = []

    for (let e of existeAbonne) {
      tableauAbonnement.push(e.idUtilisateurAbonnement)
    }

    for (let e of existeOuPaslikeVerifie) {
      likeVerifie.push(e.idPublication)
    }

    for (let e of existeOuPasCommentaireVerifie) {
      CommentaireVerifie.push(e.idPublication)
    }
    for (let e of existeOuPasretweetVerifie) {
      retweetVerifie.push(e.idPublication)
    }

    const userAll = await User.query().whereNot('id', Number(auth.user?.id))

    return view.render('pages/profil_utilisateur', {
      likeVerifie,
      retweetVerifie,
      CommentaireVerifie,
      users,
      publication,
      totalPost,
      total1,
      total2,
      userAll,
      user: auth.user,
      tableauAbonnement,
    })
  }
  async profil({ view, auth }: HttpContext) {
    const abonné = await Following.query()
      .where('id_utilisateur_abonnement', Number(auth.user?.id))
      .count('* as total1')
    const total1 = abonné[0].$extras.total1
    const abonnement = await Following.query()
      .where('id_utilisateur', Number(auth.user?.id))
      .count('* as total2')
    const total2 = abonnement[0].$extras.total2

    const userAll = (await User.query().whereNot('id', Number(auth.user?.id)).limit(3)).reverse()

    const publication = await Publication.query()
      .where('id_utilisateur', Number(auth.user?.id))
      .preload('retweet', (e) => {
        e.preload('publication')
      })

    const count = await Publication.query()
      .where('id_utilisateur', Number(auth.user?.id))
      .count('* as total')
    const totalPost = count[0].$extras.total

    const existeOuPas = await Following.findManyBy('id_utilisateur', auth.user?.id)
    const existeOuPaslikeVerifie = await Like.findManyBy('id_utilisateur_like', auth.user?.id)
    const existeOuPasCommentaireVerifie = await Commentaire.findManyBy(
      'id_utilisateur',
      auth.user?.id
    )
    const existeOuPasretweetVerifie = await Retweet.findManyBy(
      'id_utilisateur_retweet',
      auth.user?.id
    )

    let tableauAbonnement = []
    let likeVerifie = []
    let CommentaireVerifie = []
    let retweetVerifie = []

    for (let e of existeOuPaslikeVerifie) {
      likeVerifie.push(e.idPublication)
    }

    for (let e of existeOuPasCommentaireVerifie) {
      CommentaireVerifie.push(e.idPublication)
    }
    for (let e of existeOuPasretweetVerifie) {
      retweetVerifie.push(e.idPublication)
    }

    for (let e of existeOuPas) {
      tableauAbonnement.push(e.idUtilisateurAbonnement)
    }

    return view.render('pages/profil', {
      retweetVerifie,
      CommentaireVerifie,
      likeVerifie,
      user: auth.user,
      publication,
      totalPost,
      userAll,
      total1,
      total2,
      tableauAbonnement,
    })
  }
}

--follow & followers--
import Following from '#models/following'
import User from '#models/user'
import { HttpContext } from '@adonisjs/core/http'

export default class FollowersAndFollowingsController {
  async followers({ auth, params, response }: HttpContext) {
    const userId: number = Number(auth.user?.id)
    const paramsId = Number(params.id)

    const verification = await Following.query()
      .where('id_utilisateur', userId)
      .andWhere('id_utilisateur_abonnement', paramsId)
      .first()

    if (verification) {
      await verification.delete()
    } else {
      await Following.create({
        idUtilisateur: userId,
        idUtilisateurAbonnement: paramsId,
      })
    }
    response.redirect().back()
  }
  async getFollowers({ view, auth }: HttpContext) {
    const userAll = await User.query().whereNot('id', Number(auth.user?.id))

    const existeOuPas = await Following.findManyBy('id_utilisateur', auth.user?.id)

    let tableauAbonnement = []

    for (let e of existeOuPas) {
      tableauAbonnement.push(e.idUtilisateurAbonnement)
    }

    const abonné = await Following.query()
      .where('id_utilisateur_abonnement', Number(auth.user?.id))
      .whereNot('id_utilisateur', Number(auth.user?.id))
      .preload('user')

    return view.render('pages/followers', { abonné, tableauAbonnement, userAll, user: auth.user })
  }
  async getFollowings({ view, auth }: HttpContext) {
    const userAll = await User.query().whereNot('id', Number(auth.user?.id))

    const existeOuPas = await Following.findManyBy('id_utilisateur', auth.user?.id)

    let tableauAbonnement = []

    for (let e of existeOuPas) {
      tableauAbonnement.push(e.idUtilisateurAbonnement)
    }

    const abonnement = await Following.query()
      .where('id_utilisateur', Number(auth.user?.id))
      .preload('userAbonnement')

    return view.render('pages/followings', {
      abonnement,
      tableauAbonnement,
      userAll,
      user: auth.user,
    })
  }
}

--Tweets--
import type { HttpContext } from '@adonisjs/core/http'
import Publication from '#models/publication'
import app from '@adonisjs/core/services/app'
import { cuid } from '@adonisjs/core/helpers'
import User from '#models/user'
import Following from '#models/following'
import Like from '#models/like'
import Retweet from '#models/retweet'
import Commentaire from '#models/commentaire'

export default class PublicationsController {
  async home({ view, auth }: HttpContext) {
    const userPublication = (
      await Publication.query()
        .preload('user')
        .preload('retweet', (e) => {
          e.preload('publication')
        })
    ).reverse()

    const userAll = (await User.query().whereNot('id', Number(auth.user?.id)).limit(3)).reverse()

    const existeOuPaslikeVerifie = await Like.findManyBy('id_utilisateur_like', auth.user?.id)
    const existeOuPasCommentaireVerifie = await Commentaire.findManyBy(
      'id_utilisateur',
      auth.user?.id
    )
    const existeOuPasretweetVerifie = await Retweet.findManyBy(
      'id_utilisateur_retweet',
      auth.user?.id
    )
    const existeAbonne = await Following.findManyBy('id_utilisateur', auth.user?.id)

    let likeVerifie = []
    let CommentaireVerifie = []
    let retweetVerifie = []
    let tableauAbonnement = []

    for (let e of existeAbonne) {
      tableauAbonnement.push(e.idUtilisateurAbonnement)
    }

    for (let e of existeOuPaslikeVerifie) {
      likeVerifie.push(e.idPublication)
    }

    for (let e of existeOuPasCommentaireVerifie) {
      CommentaireVerifie.push(e.idPublication)
    }
    for (let e of existeOuPasretweetVerifie) {
      retweetVerifie.push(e.idPublication)
    }

    return view.render('pages/home', {
      user: auth.user,
      userPublication,
      userAll,
      likeVerifie,
      CommentaireVerifie,
      retweetVerifie,
      tableauAbonnement,
    })
  }

  async create({ request, auth, response }: HttpContext) {
    const texteTweet: string = request.input('texteTweet')
    const image = request.file('image')

    if (image) {
      await image.move(app.makePath('public/uploads'), {
        name: `${cuid()}.${image.extname}`,
      })
    }

    if (texteTweet !== null) {
      await Publication.create({
        texte: texteTweet,
        idUtilisateur: auth.user?.id,
        media: image?.fileName || 'null',
      })
    }

    response.redirect().back()
  }
  async like({ params, response, auth }: HttpContext) {
    const { id } = params
    const publication = await Publication.findOrFail(id)

    const verification = await Like.query()
      .where('id_publication', id)
      .andWhere('id_utilisateur_like', Number(auth.user?.id))
      .first()

    if (verification) {
      await verification.delete()
      publication.nombreLike = publication.nombreLike - 1
      await publication.save()
    } else {
      await Like.create({
        idPublication: id,
        idUtilisateur: publication.idUtilisateur,
        idUtilisateurLike: auth.user?.id,
      })
      publication.nombreLike = publication.nombreLike + 1

      await publication.save()
    }
    response.redirect().back()
  }
  async retweet({ params, response, auth }: HttpContext) {
    const { id } = params
    const publication = await Publication.findOrFail(id)

    const verification = await Retweet.query()
      .where('id_publication', id)
      .andWhere('id_utilisateur_retweet', Number(auth.user?.id))
      .first()

    if (verification) {
      await verification.delete()
      publication.nombreRetweet = publication.nombreRetweet - 1

      const verification2 = await Publication.findOrFail(verification.idPublicationRetweet)
      if (verification2) {
        await verification2.delete()
      }
    } else {
      publication.nombreRetweet = publication.nombreRetweet + 1

      const publications = await Publication.create({
        idUtilisateur: auth.user?.id,
        texte: publication.texte,
        media: publication.media,
        nombreRetweet: publication.nombreRetweet,
        nombreLike: publication.nombreLike,
        nombreCommentaire: publication.nombreCommentaire,
      })

      await Retweet.create({
        idPublication: id,
        idPublicationRetweet: publications.id,
        idUtilisateur: publication.idUtilisateur,
        idUtilisateurRetweet: auth.user?.id,
      })
    }

    await publication.save()

    response.redirect().back()
  }
  async commentaire({ request, params, response, auth }: HttpContext) {
    const texteTweet: string = request.input('texteTweet')
    const image = request.file('image_commentaire')
    const publications = Publication.findOrFail(params.id)

    ;(await publications).nombreCommentaire = (await publications).nombreCommentaire + 1
    if (image) {
      await image.move(app.makePath('public/uploads'), {
        name: `${cuid()}.${image.extname}`,
      })
    }
    ;(await publications).save()

    await Commentaire.create({
      texte: texteTweet,
      idUtilisateur: auth.user?.id,
      idPublication: params.id,
      media: image?.fileName,
    })

    response.redirect().back()
  }
  async getCommentaire({ view, params, auth }: HttpContext) {
    const { id } = params

    const publication = await Publication.findOrFail(id)

    const commentaire = await Commentaire.query().where('idPublication', id).preload('user')

    return view.render('pages/tweet', { commentaire, publication, user: auth.user })
  }
}
--Messages--import Message from '#models/message'
import User from '#models/user'
import { cuid } from '@adonisjs/core/helpers'
import type { HttpContext } from '@adonisjs/core/http'
import app from '@adonisjs/core/services/app'

export default class MessagesController {
  async index({ view, auth }: HttpContext) {
    const userAll = (await User.query().whereNot('id', Number(auth.user?.id))).reverse()

    return view.render('pages/messages', { user: auth.user, userAll })
  }
  async messageCreate({ params, request, auth, response }: HttpContext) {
    let texte = request.input('texte')
    let image = request.file('image')

    let { id } = params

    if (image) {
      await image.move(app.makePath('public/uploads'), {
        name: `${cuid()}.${image.extname}`,
      })
    }

    if (texte !== 'null') {
      Message.create({
        texte: texte,
        media: image?.fieldName || 'null',
        idUtilisateurEnvoie: auth.user?.id,
        idUtilisateurRecu: id,
      })
    }

    response.redirect().back()
  }
  async getMessage({ params, auth, view }: HttpContext) {
    const userAll = (await User.query().whereNot('id', Number(auth.user?.id))).reverse()

    let { id } = params

    let userInconu = User.findOrFail(id)

    const messages = await Message.query()
      .where((groupeEnvoie) => {
        groupeEnvoie
          .where('idUtilisateurEnvoie', Number(auth.user?.id))
          .where('idUtilisateurRecu', id)
      })
      .orWhere((groupeRécupération) => {
        groupeRécupération
          .where('idUtilisateurEnvoie', id)
          .where('idUtilisateurRecu', Number(auth.user?.id))
      })
      .orderBy('createdAt', 'asc')

    return view.render('pages/message_user', { userInconu, messages, user: auth.user, userAll })
  }
}



