<!-- Floating Tweet Button (Bottom Right) -->

<div class="md:hidden lg:hidden fixed bottom-16 right-6 z-40">
  <button 
    onclick="openTweetModal()"
    class="bg-blue-500 hover:bg-blue-600 text-white rounded-full p-4 shadow-lg transition-all duration-200 hover:scale-105"
  >
    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
    </svg>
  </button>
</div>

<!-- Tweet Composition Modal -->
<div id="tweet-modal" class="hidden fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4">
  <div class="bg-black rounded-xl border border-gray-800 w-full max-w-md">
    <!-- Modal Header -->
    <div class="flex justify-between items-center p-4 border-b border-gray-800">
      <button 
        onclick="closeTweetModal()"
        class="text-gray-400 hover:text-white rounded-full p-2"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
        </svg>
      </button>
    </div>

    <form action="/tweets" method="post">
      {{ csrfField() }}
    <!-- Tweet Composition Area -->
    <div class="p-4">
      <div class="flex space-x-3">
        <!-- User Avatar -->
        <a href="/profile" class="flex-shrink-0 w-12 h-12 rounded-full overflow-hidden">
            {{--  <img src="{{ asset('image/profile0.png') }}" alt="User profile" class="w-full h-full object-cover">  --}}
        @if(user?.avatar)
        <img src="{{ '/uploads/' + (user.avatar || '') }}"
        
        alt="Profile picture"
        class="w-full h-full object-cover"
        >

        @else
          <div class="w-full h-full bg-gray-700 flex items-center justify-center text-white text-xl font-bold uppercase">
            {{ user?.firstName?.charAt(0) }}
          </div>
        @endif
        </a>

        <!-- Tweet Text Area -->
        <div class="flex-1">
          <textarea 
            name="tweet"
            id="tweet-textarea"
            placeholder="What's happening?"
            class="w-full bg-transparent text-white text-xl outline-none placeholder-gray-500 resize-none pt-3 min-h-[120px]"
            maxlength="280"
            oninput="updateCharCount()"
          ></textarea>
          
          <!-- Character Counter -->
          <div id="char-counter" class="text-right text-gray-500 text-sm mb-3">
            0/280
          </div>
      <!-- Hidden File Input for media -->
      <input type="file" id="mediaInput" name="media" accept="image/*,video/*" class="hidden" />
          
          <!-- Tweet Actions -->
          <div class="flex justify-between items-center pt-3 border-t border-gray-800">
            <div class="flex space-x-2">
              <!-- Media Upload -->
          <button type="button" onclick="document.getElementById('mediaInput').click()">
            <img src="{{ asset('icons/Top-Tweets.svg') }}" alt="Media">
          </button>
          <div><img src="{{ asset('icons/gif.svg') }}" alt="GIF"></div>
          <div><img src="{{ asset('icons/poll.svg') }}" alt="Poll"></div>
          <div><img src="{{ asset('icons/emoji.svg') }}" alt="Emoji"></div>
          <div><img src="{{ asset('icons/schedule.svg') }}" alt="Schedule"></div>
            </div>
            
            <!-- Tweet Button -->
            <button 
              type="submit"
              id="tweet-button"
              class="bg-blue-500 hover:bg-blue-600 text-white text-sm font-bold rounded-full px-4 py-1.5 capitalize disabled:opacity-50 disabled:cursor-not-allowed"
              disabled
            >
            Tweet
            </button>
          </div>
        </div>
      </div>
    </div>
  </form>
  </div>
</div>

<script>
  // Modal control functions
  function openTweetModal() {
    document.getElementById('tweet-modal').classList.remove('hidden');
    document.getElementById('tweet-textarea').focus();
  }
  
  function closeTweetModal() {
    document.getElementById('tweet-modal').classList.add('hidden');
    document.getElementById('tweet-textarea').value = '';
    updateCharCount(); // Reset counter
  }

  // Character counter
  function updateCharCount() {
    const textarea = document.getElementById('tweet-textarea');
    const counter = document.getElementById('char-counter');
    const tweetButton = document.getElementById('tweet-button');
    const charCount = textarea.value.length;
    
    counter.textContent = `${charCount}/280`;
    
    // Update counter color when approaching limit
    if (charCount > 250) {
      counter.classList.add('text-yellow-500');
      counter.classList.remove('text-gray-500');
    } else {
      counter.classList.remove('text-yellow-500');
      counter.classList.add('text-gray-500');
    }
    
    // Enable/disable tweet button
    tweetButton.disabled = charCount === 0 || charCount > 280;
  }

  // Tweet submission
  function postTweet() {
    const tweetContent = document.getElementById('tweet-textarea').value;
    
    // Here you would typically send the tweet to your backend
    console.log('Posting tweet:', tweetContent);
    
    // Close modal after posting
    closeTweetModal();
    
    // Show success message (optional)
    // alert('Tweet posted successfully!');
  }

  // Close modal when clicking outside
  document.getElementById('tweet-modal').addEventListener('click', function(e) {
    if (e.target === this) {
      closeTweetModal();
    }
  });
</script>