<!-- Floating Tweet Button (Mobile) -->
<div class="md:hidden lg:hidden fixed bottom-16 right-6 z-40">
  <button 
    onclick="openTweetModal()"
    class="bg-blue-500 hover:bg-blue-600 text-white rounded-full p-4 shadow-lg transition-all duration-200 hover:scale-105"
  >
    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
    </svg>
  </button>
</div>

<!-- Tweet Modal -->
<div id="tweet-modal" class="hidden fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4">
  <div class="bg-black rounded-xl border border-gray-800 w-full max-w-md">
    <div class="flex justify-between items-center p-4 border-b border-gray-800">
      <button onclick="closeTweetModal()" class="text-gray-400 hover:text-white rounded-full p-2">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
        </svg>
      </button>
    </div>

    <form 
      action="/tweets" 
      method="post" 
      enctype="multipart/form-data"
      id="modal-tweet-form"
    >
      {{ csrfField() }}
      
      <div class="p-4">
        <div class="flex space-x-3">
          <!-- User Avatar -->
          <a href="/profile" class="flex-shrink-0 w-12 h-12 rounded-full overflow-hidden">
            @if(user?.avatar)
              <img src="{{ '/uploads/' + user.avatar }}" alt="Profile" class="w-full h-full object-cover">
            @else
              <div class="w-full h-full bg-gray-700 flex items-center justify-center text-white text-xl font-bold uppercase">
                {{ user?.firstName?.charAt(0) }}
              </div>
            @endif
          </a>

          <div class="flex-1">
            <textarea 
              name="tweet"
              id="modal-tweet-textarea"
              placeholder="What's happening?"
              class="w-full bg-transparent text-white text-xl outline-none placeholder-gray-500 resize-none pt-3 min-h-[120px]"
              maxlength="280"
              oninput="updateModalCharCount()"
            ></textarea>
            
            <!-- Media Preview -->
            <div id="modal-media-preview" class="mt-3 rounded-xl overflow-hidden hidden">
              <div class="relative">
                <img id="modal-media-preview-image" class="max-h-80 w-full object-cover rounded-xl border border-gray-800 hidden">
                <video id="modal-media-preview-video" controls class="max-h-80 w-full rounded-xl border border-gray-800 hidden" preload="none"></video>
                <button 
                  type="button" 
                  onclick="removeMediaPreview()"
                  class="absolute top-2 right-2 bg-black bg-opacity-50 text-white rounded-full p-2 hover:bg-opacity-70"
                >
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                  </svg>
                </button>
              </div>
            </div>
            
            <div id="modal-char-counter" class="text-right text-gray-500 text-sm mb-3">
              0/280
            </div>
            
            <input 
              type="file" 
              id="modal-mediaInput" 
              name="mediaUrl" 
              accept="image/*,video/*" 
              class="hidden" 
              onchange="handleMediaUpload(this)"
            />
            
            <div class="flex justify-between items-center pt-3 border-t border-gray-800">
              <div class="flex space-x-2">
                <button type="button" onclick="document.getElementById('modal-mediaInput').click()">
                  <i class="bi bi-award" aria-label="Media"></i>
                </button>
                  <div><i class="bi bi-file-earmark-gif-fill" aria-label="GIF"></i></div>
                  <div><i class="bi bi-bar-chart-fill" aria-label="Poll"></i></div>
                  <div><i class="bi bi-emoji-smile-fill" aria-label="Emoji"></i></div>
                  <div><i class="bi bi-calendar-event-fill" aria-label="Schedule"></i></div>

              </div>
              
              <button 
                type="submit"
                id="modal-tweet-button"
                class="bg-blue-500 hover:bg-blue-600 text-white text-sm font-bold rounded-full px-4 py-1.5 capitalize disabled:opacity-50 disabled:cursor-not-allowed"
                disabled
              >
                Tweet
              </button>
            </div>
          </div>
        </div>
      </div>
    </form>
  </div>
</div>

<script>
  // Modal control functions
  function openTweetModal() {
    document.getElementById('tweet-modal').classList.remove('hidden');
    document.getElementById('modal-tweet-textarea').focus();
  }

  function closeTweetModal() {
    document.getElementById('tweet-modal').classList.add('hidden');
    document.getElementById('modal-tweet-textarea').value = '';
    document.getElementById('modal-mediaInput').value = '';
    removeMediaPreview();
    updateModalCharCount();
  }

  // Media handling
  function handleMediaUpload(input) {
    const file = input.files[0];
    if (!file) return;

    const previewContainer = document.getElementById('modal-media-preview');
    const imagePreview = document.getElementById('modal-media-preview-image');
    const videoPreview = document.getElementById('modal-media-preview-video');

    previewContainer.classList.remove('hidden');
    
    if (file.type.startsWith('image/')) {
      imagePreview.classList.remove('hidden');
      videoPreview.classList.add('hidden');
      imagePreview.src = URL.createObjectURL(file);
    } else if (file.type.startsWith('video/')) {
      videoPreview.classList.remove('hidden');
      imagePreview.classList.add('hidden');
      videoPreview.src = URL.createObjectURL(file);
    }
  }

  function removeMediaPreview() {
    const previewContainer = document.getElementById('modal-media-preview');
    const imagePreview = document.getElementById('modal-media-preview-image');
    const videoPreview = document.getElementById('modal-media-preview-video');
    const fileInput = document.getElementById('modal-mediaInput');
    
    previewContainer.classList.add('hidden');
    imagePreview.classList.add('hidden');
    videoPreview.classList.add('hidden');
    fileInput.value = '';
    
    // Revoke object URLs to free memory
    if (imagePreview.src) URL.revokeObjectURL(imagePreview.src);
    if (videoPreview.src) URL.revokeObjectURL(videoPreview.src);
  }

  // Character Counters
  function updateHomeCharCount() {
    const textarea = document.getElementById('home-tweet-textarea');
    const counter = document.getElementById('home-char-counter');
    const button = document.getElementById('home-tweet-button');
    updateCharCounter(textarea, counter, button);
  }

  function updateModalCharCount() {
    const textarea = document.getElementById('modal-tweet-textarea');
    const counter = document.getElementById('modal-char-counter');
    const button = document.getElementById('modal-tweet-button');
    updateCharCounter(textarea, counter, button);
  }

  function updateCharCounter(textarea, counter, button) {
    const charCount = textarea.value.length;
    counter.textContent = `${charCount}/280`;
    
    if (charCount > 250) {
      counter.classList.add('text-yellow-500');
      counter.classList.remove('text-gray-500');
    } else {
      counter.classList.remove('text-yellow-500');
      counter.classList.add('text-gray-500');
    }
    
    button.disabled = charCount === 0 || charCount > 280;
  }

  // Form Submission
  document.addEventListener('DOMContentLoaded', () => {
    // Home form
    document.getElementById('home-tweet-form')?.addEventListener('submit', handleSubmit);
    
    // Modal form
    document.getElementById('modal-tweet-form')?.addEventListener('submit', function(e) {
      e.preventDefault();
      handleSubmit(e);
      closeTweetModal();
    });
  });

  async function handleSubmit(e) {
    e.preventDefault();
    const form = e.target;
    const formData = new FormData(form);
    
    try {
      const response = await fetch(form.action, {
        method: 'POST',
        body: formData,
        headers: {
          'Accept': 'application/json',
          'X-CSRF-Token': form.querySelector('[name="_csrf"]').value
        }
      });
      
      if (response.ok) {
        form.reset();
        window.location.reload();
      } else {
        console.error('Error submitting tweet');
      }
    } catch (error) {
      console.error('Network error:', error);
    }
  }

  // Close modal when clicking outside
  document.getElementById('tweet-modal')?.addEventListener('click', function(e) {
    if (e.target === this) {
      closeTweetModal();
    }
  });
</script>