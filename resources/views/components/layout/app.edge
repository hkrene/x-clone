<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{{ title || "Twitter Home Page" }}</title>
  @if ($slots.meta)
    {{{ await $slots.meta() }}}
  @endif
  <script src="https://cdn.tailwindcss.com"></script> 
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
</head>
<body class="bg-black text-white flex min-h-screen max-w-7xl mx-auto">
  @if(auth.user)
    <!-- Left Sidebar -->
    <section class="hidden md:block w-[88px] lg:w-[275px] min-h-screen px-2 border-r border-gray-800 sticky top-0 overflow-y-auto h-screen">
      <div class="flex flex-col h-full justify-between py-4">
        <div class="space-y-2">
          

          <!-- Navbar -->
          <nav class="space-y-1 w-full mt-2">
            <!-- Twitter Logo -->
          <a href="/home" class="p-3 hover:bg-gray-900 rounded-full cursor-pointer mx-auto lg:mx-0 md:ml-2">
            <svg viewBox="0 0 24 24" aria-hidden="true" class="w-8 h-8 text-white">
              <g>
                <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z" fill="currentColor"></path>
              </g>
            </svg>
          </a>
            <a href="/home" class="flex justify-center lg:justify-start items-center space-x-4 p-3 hover:bg-gray-900 rounded-full">
              <svg viewBox="0 0 24 24" class="text-white w-8 h-8">
                <g>
                  <path d="M12 1.696L.622 8.807l1.06 1.696L3 9.679V19.5C3 20.881 4.119 22 5.5 22h13c1.381 0 2.5-1.119 2.5-2.5V9.679l1.318.824 1.06-1.696L12 1.696zM12 16.5c-1.933 0-3.5-1.567-3.5-3.5s1.567-3.5 3.5-3.5 3.5 1.567 3.5 3.5-1.567 3.5-3.5 3.5z" fill="currentColor"></path>
                </g>
              </svg>
              <span class="text-xl hidden lg:block">Home</span>
            </a>
            <a href="#" class="flex items-center space-x-4 p-3 hover:bg-gray-900 rounded-full justify-center lg:justify-start">
              <svg viewBox="0 0 24 24" class="text-white w-8 h-8">
                <g>
                  <path d="M10.25 3.75c-3.59 0-6.5 2.91-6.5 6.5s2.91 6.5 6.5 6.5c1.795 0 3.419-.726 4.596-1.904 1.178-1.177 1.904-2.801 1.904-4.596 0-3.59-2.91-6.5-6.5-6.5zm-8.5 6.5c0-4.694 3.806-8.5 8.5-8.5s8.5 3.806 8.5 8.5c0 1.986-.682 3.815-1.824 5.262l4.781 4.781-1.414 1.414-4.781-4.781c-1.447 1.142-3.276 1.824-5.262 1.824-4.694 0-8.5-3.806-8.5-8.5z" fill="currentColor"></path>
                </g>
              </svg>
              <span class="capitalize hidden lg:block">explore</span>
            </a>
            <a href="#" class="flex items-center space-x-4 p-3 hover:bg-gray-900 rounded-full justify-center lg:justify-start">
              <svg viewBox="0 0 24 24" class="text-white w-8 h-8">
                <g>
                  <path d="M19.993 9.042C19.48 5.017 16.054 2 11.996 2s-7.49 3.021-7.999 7.051L2.866 18H7.1c.463 2.282 2.481 4 4.9 4s4.437-1.718 4.9-4h4.236l-1.143-8.958zM12 20c-1.306 0-2.417-.835-2.829-2h5.658c-.412 1.165-1.523 2-2.829 2zm-6.866-4l.847-6.698C6.364 6.272 8.941 4 11.996 4s5.627 2.268 6.013 5.295L18.864 16H5.134z" fill="currentColor"></path>
                </g>
              </svg>
              <span class="capitalize hidden lg:block">notifications</span>
            </a>
            <a href="#" class="flex items-center space-x-4 p-3 hover:bg-gray-900 rounded-full justify-center lg:justify-start">
              <svg viewBox="0 0 24 24" class="text-white w-8 h-8">
                <g>
                  <path d="M1.998 5.5c0-1.381 1.119-2.5 2.5-2.5h15c1.381 0 2.5 1.119 2.5 2.5v13c0 1.381-1.119 2.5-2.5 2.5h-15c-1.381 0-2.5-1.119-2.5-2.5v-13zm2.5-.5c-.276 0-.5.224-.5.5v2.764l8 3.638 8-3.636V5.5c0-.276-.224-.5-.5-.5h-15zm15.5 5.463l-8 3.636-8-3.638V18.5c0 .276.224.5.5.5h15c.276 0 .5-.224.5-.5v-8.037z" fill="currentColor"></path>
                </g>
              </svg>
              <span class="capitalize hidden lg:block">message</span>
            </a>
            <a href="#" class="flex items-center space-x-4 p-3 hover:bg-gray-900 rounded-full justify-center lg:justify-start">
              <svg viewBox="0 0 24 24" class="text-white w-8 h-8">
                <g>
                  <path d="M4 4.5C4 3.12 5.119 2 6.5 2h11C18.881 2 20 3.12 20 4.5v18.44l-8-5.71-8 5.71V4.5zM6.5 4c-.276 0-.5.22-.5.5v14.56l6-4.29 6 4.29V4.5c0-.28-.224-.5-.5-.5h-11z" fill="currentColor"></path>
                </g>
              </svg>
              <span class="capitalize hidden lg:block">bookmarks</span>
            </a>
            <a href="#" class="flex items-center space-x-4 p-3 hover:bg-gray-900 rounded-full justify-center lg:justify-start">
              <svg viewBox="0 0 24 24" class="text-white w-8 h-8">
                <g>
                  <path d="M3 4.5C3 3.12 4.12 2 5.5 2h13C19.88 2 21 3.12 21 4.5v15c0 1.38-1.12 2.5-2.5 2.5h-13C4.12 22 3 20.88 3 19.5v-15zM5.5 4c-.28 0-.5.22-.5.5v15c0 .28.22.5.5.5h13c.28 0 .5-.22.5-.5v-15c0-.28-.22-.5-.5-.5h-13zM16 10H8V8h8v2zm-8 2h8v2H8v-2z" fill="currentColor"></path>
                </g>
              </svg>
              <span class="capitalize hidden lg:block">lists</span>
            </a>
            <a href="/profile" class="flex items-center space-x-4 p-3 hover:bg-gray-900 rounded-full justify-center lg:justify-start">
              <svg viewBox="0 0 24 24" class="text-white w-8 h-8">
                <g>
                  <path d="M5.651 19h12.698c-.337-1.8-1.023-3.21-1.945-4.19C15.318 13.65 13.838 13 12 13s-3.317.65-4.404 1.81c-.922.98-1.608 2.39-1.945 4.19zm.486-5.56C7.627 11.85 9.648 11 12 11s4.373.85 5.863 2.44c1.477 1.58 2.366 3.8 2.632 6.46l.11 1.1H3.395l.11-1.1c.266-2.66 1.155-4.88 2.632-6.46zM12 4c-1.105 0-2 .9-2 2s.895 2 2 2 2-.9 2-2-.895-2-2-2zM8 6c0-2.21 1.791-4 4-4s4 1.79 4 4-1.791 4-4 4-4-1.79-4-4z" fill="currentColor"></path>
                </g>
              </svg>
              <span class="capitalize hidden lg:block">profile</span>
            </a>
            <a href="#" class="flex items-center space-x-4 p-3 hover:bg-gray-900 rounded-full justify-center lg:justify-start">
              <svg viewBox="0 0 24 24" class="text-white w-8 h-8">
                <g>
                  <circle cx="6" cy="12" r="2" fill="currentColor"/>
                  <circle cx="12" cy="12" r="2" fill="currentColor"/>
                  <circle cx="18" cy="12" r="2" fill="currentColor"/>
                </g>
              </svg>
              <span class="capitalize hidden lg:block">more</span>
            </a>
          </nav>

          <button
            class="w-full bg-white text-black font-bold py-3 rounded-full mt-4 capitalize transition-colors hover:bg-gray-100 active:bg-gray-200 flex justify-center items-center gap-2"
            onclick="window.tweetModal.open()"
          >
            <span class="hidden lg:inline">Post</span>
            <svg viewBox="0 0 24 24" class="w-5 h-5" aria-hidden="true" fill="currentColor">
              <path d="M23 3c-6.62-.1-10.38 2.421-13.05 6.03C7.29 12.61 6 17.331 6 22h2c0-1.007.07-2.012.19-3H12c4.1 0 7.48-3.082 7.94-7.054C22.79 10.147 23.17 6.359 23 3zm-7 8h-1.5v2H16c.63-.016 1.2-.08 1.72-.188C16.95 15.24 14.68 17 12 17H8.55c.57-2.512 1.57-4.851 3-6.78 2.16-2.912 5.29-4.911 9.45-5.187C20.95 8.079 19.9 11 16 11z"></path>
            </svg>
          </button>
        </div>

        <!-- Profile Section -->
        <div class="p-3 hover:bg-gray-900 rounded-full cursor-pointer w-full">
          <div class="flex justify-between items-center">
            <div class="flex items-center space-x-3">
              <a href="/profile">
                @if(auth.user.avatar)
                  @if(auth.user.avatar.startsWith('data:'))
                    <img src="{{ auth.user.avatar }}" 
                         alt="{{ auth.user.firstName }}'s profile picture"
                         class="w-10 h-10 rounded-full object-cover">
                  @elseif(auth.user.avatar.startsWith('http'))
                    <img src="{{ auth.user.avatar }}" 
                         alt="{{ auth.user.firstName }}'s profile picture"
                         class="w-10 h-10 rounded-full object-cover">
                  @else
                    <div class="w-10 h-10 bg-gray-700 rounded-full flex items-center justify-center text-white text-xl font-bold uppercase">
                      {{ auth.user.firstName.charAt(0) || 'U' }}
                    </div>
                  @endif
                @else
                  <div class="w-10 h-10 bg-gray-700 rounded-full flex items-center justify-center text-white text-xl font-bold uppercase">
                    {{ auth.user.firstName.charAt(0) || 'U' }}
                  </div>
                @endif
              </a>
              <div class="hidden lg:block">
                <a href="/profile" class="flex items-center gap-1">
                  <p class="text-sm font-medium">
                    {{ auth.user.firstName }} {{ auth.user.surname }}
                  </p>
                  @if(auth.user.isVerified)
                    <i class="bi bi-patch-check-fill w-4 h-4 text-blue-500" aria-label="Verified"></i>
                  @endif
                </a>
                <p class="text-gray-500 text-sm">
                  {{--  {{ auth.user.username }}  --}}
                  {{ auth.user.username.startsWith('@') ? auth.user.username : `@${auth.user.username}` }}
                </p>
              </div>
            </div>
            <button type="button" class="hidden lg:block cursor-pointer profile-modal-toggle" aria-label="More options">
              <i class="bi bi-three-dots-vertical text-white text-xl"></i>
            </button>
          </div>
        </div>

        <!-- Profile Modal -->
        <div id="profileModal" class="hidden fixed bottom-20 left-34 w-68 bg-gray-950 rounded-2xl shadow-lg z-50 border border-gray-700">
          <div class="border-gray-700 py-2">
            <form action="/logout" method="POST">
              {{ csrfField() }}
              <button type="submit" class="block py-2 px-1 pr-20 pl-4 text-md hover:bg-gray-900 font-bold">
                Add an existing account
              </button>
              <button type="submit" class="block py-2 px-1 pr-20 pl-4 text-md hover:bg-gray-900 font-bold w-full text-left">
                Log out 
                  {{ auth.user.username.startsWith('@') ? auth.user.username : `@${auth.user.username}` }}
              </button>
            </form>
          </div>
        </div>

        <!-- Backdrop -->
        <div id="modalBackdrop" class="hidden fixed inset-0 bg-black bg-opacity-50 z-40" onclick="toggleProfileModal(event)"></div>
      </div>
    </section>
  @endif

  {{{ await $slots.main() }}}

  @if(auth.user)
    <!-- Right Sidebar -->
    <footer class="hidden lg:block w-[370px] min-h-screen p-4 border-l border-gray-800 sticky top-0 overflow-y-auto h-screen pl-8">
      <div class="mb-4 relative">
        <div class="relative">
          <div class="absolute inset-y-0 left-0 pl-4 flex items-center">
            <i class="bi bi-search w-5 h-5" aria-label="Search icon"></i>
          </div>
          <input type="text" placeholder="Search Twitter" class="w-full bg-[rgb(32,35,39)] rounded-full pl-12 pr-5 py-3 text-white placeholder-gray-500">
        </div>
      </div>

      <!-- Trends Section -->
      <div class="bg-[rgb(32,35,39)] rounded-2xl mb-6 overflow-hidden">
        <div class="flex justify-between items-center p-4">
          <h2 class="text-xl font-bold">Trends for you</h2>
          <i class="bi bi-gear-fill cursor-pointer pr-4" aria-label="Setting icon"></i>
        </div>
        <div class="space-y-4">
          <!-- Sample trends (replace with dynamic data if needed) -->
          @each(trend in [
            { category: 'Trending in Turkey', title: '#squid', tweets: '2,066 Tweets' },
            { category: 'Technology', title: '#AdonisJS', tweets: '1,245 Tweets' },
            { category: 'Sports', title: '#WorldCup', tweets: '45,892 Tweets' },
            { category: 'Entertainment', title: '#NewMovie', tweets: '12,543 Tweets' }
          ])
            <div class="px-4 hover:bg-gray-800 cursor-pointer flex justify-between">
              <div class="space-y-[1px]">
                <div class="text-sm text-gray-500">{{ trend.category }}</div>
                <div class="font-bold uppercase">{{ trend.title }}</div>
                <div class="text-sm text-gray-500">{{ trend.tweets }}</div>
              </div>
              <i class="bi bi-three-dots text-xl"></i>
            </div>
          @endeach
          <button class="font-bold text-blue-500 px-4 pb-4">show more</button>
        </div>
      </div>

      <!-- Who to Follow Section -->
      <div class="bg-[rgb(32,35,39)] rounded-xl overflow-hidden">
        <div class="max-w-md mx-auto p-4">
          <div class="flex justify-between items-center mb-4">
            <h2 class="text-xl font-bold">Who to follow</h2>
          </div>

          <div class="space-y-4">
            @each(user in suggestedUsers)
              <div class="flex justify-between items-center">
                <div class="flex items-center space-x-3">
                  @if(user.avatar)
                    @if(user.avatar.startsWith('data:'))
                      <img src="{{ user.avatar }}" 
                           alt="{{ user.username }} avatar" 
                           class="w-10 h-10 rounded-full object-cover">
                    @elseif(user.avatar.startsWith('http'))
                      <img src="{{ user.avatar }}" 
                           alt="{{ user.username }} avatar" 
                           class="w-10 h-10 rounded-full object-cover">
                    @else
                      <div class="w-10 h-10 bg-gray-700 rounded-full flex items-center justify-center text-white text-sm font-bold uppercase">
                        {{ user.firstName.charAt(0) }}
                      </div>
                    @endif
                  @else
                    <div class="w-10 h-10 bg-gray-700 rounded-full flex items-center justify-center text-white text-sm font-bold uppercase">
                      {{ user.firstName.charAt(0) }}
                    </div>
                  @endif
                  <div>
                    <div class="flex items-center gap-[3px]">
                      <p class="capitalize text-sm hover:underline">
                        {{ user.firstName }} {{ user.surname }}
                      </p>
                      @if(user.isVerified)
                        <i class="bi bi-patch-check-fill w-4 h-4 text-blue-500" aria-label="Verified"></i>
                      @endif
                    </div>
                    <p class="text-gray-500 text-sm">
                      @{{ user.username }}
                    </p>
                  </div>
                </div>
                <button class="bg-white text-black px-4 py-1 rounded-full text-sm">
                  Follow
                </button>
              </div>
            @endeach
          </div>

          <div class="mt-4">
            <a href="#" class="text-blue-500 hover:underline font-bold">Show more</a>
          </div>
        </div>
      </div>

      <!-- Footer Links -->
      <div class="mt-4 text-xs text-gray-600 px-4">
        <div class="flex flex-wrap gap-x-4 gap-y-1 px-2">
          <a href="#" class="hover:underline">Terms of Service</a>
          <a href="#" class="hover:underline">Privacy Policy</a>
          <a href="#" class="hover:underline">Cookie Policy</a>
          <a href="#" class="hover:underline">Imprint</a>
          <a href="#" class="hover:underline">Ads Info</a>
          <a href="#" class="hover:underline">More...</a>
          <span>&copy; 2025 X, Inc.</span>
        </div>
      </div>
    </footer>
  @endif

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const modal = document.getElementById('profileModal')
      const backdrop = document.getElementById('modalBackdrop')
      const toggleButton = document.querySelector('.profile-modal-toggle')

      // Toggle modal visibility
      toggleButton?.addEventListener('click', (e) => {
        e.stopPropagation()
        modal.classList.toggle('hidden')
        backdrop.classList.toggle('hidden')
        
        // Update aria-expanded state
        const isExpanded = toggleButton.getAttribute('aria-expanded') === 'true'
        toggleButton.setAttribute('aria-expanded', (!isExpanded).toString())
      })

      // Close modal when clicking outside
      document.addEventListener('click', (e) => {
        const isClickInsideModal = modal?.contains(e.target)
        const isClickOnToggle = toggleButton?.contains(e.target)

        if (!isClickInsideModal && !isClickOnToggle && !modal?.classList.contains('hidden')) {
          modal?.classList.add('hidden')
          backdrop?.classList.add('hidden')
          toggleButton?.setAttribute('aria-expanded', 'false')
        }
      })

      // Function to open tweet modal (placeholder)
      window.openTweetModal = function() {
        console.log('Tweet modal would open here')
        // Implement your tweet modal logic
      }

      // Function to toggle profile modal (for backdrop click)
      window.toggleProfileModal = function(e) {
        e.stopPropagation()
        modal?.classList.toggle('hidden')
        backdrop?.classList.toggle('hidden')
      }
    })
    
    
     // Create homeTweetForm object
  window.homeTweetForm = {
    // Media handling
    handleMediaUpload: function(input) {
      try {
        if (!input || !input.files || input.files.length === 0) return;
        
        const file = input.files[0];
        if (!file) return;
        
        const previewContainer = document.getElementById('home-media-preview');
        const imagePreview = document.getElementById('home-media-preview-image');
        const videoPreview = document.getElementById('home-media-preview-video');
        
        if (!previewContainer || !imagePreview || !videoPreview) return;
        
        // Validate file size
        const maxImageSize = 5 * 1024 * 1024; // 5MB
        const maxVideoSize = 20 * 1024 * 1024; // 20MB
        
        if (file.type.startsWith('image/') && file.size > maxImageSize) {
          alert('Image size exceeds 5MB limit');
          input.value = '';
          return;
        }
        
        if (file.type.startsWith('video/') && file.size > maxVideoSize) {
          alert('Video size exceeds 20MB limit');
          input.value = '';
          return;
        }
        
        previewContainer.classList.remove('hidden');
        
        const objectUrl = URL.createObjectURL(file);
        
        if (file.type.startsWith('image/')) {
          imagePreview.src = objectUrl;
          imagePreview.classList.remove('hidden');
          videoPreview.classList.add('hidden');
        } else if (file.type.startsWith('video/')) {
          videoPreview.src = objectUrl;
          videoPreview.classList.remove('hidden');
          imagePreview.classList.add('hidden');
        }
      } catch (error) {
        console.error('Error handling media upload:', error);
      }
    },
    
    removeMediaPreview: function() {
      try {
        const previewContainer = document.getElementById('home-media-preview');
        const imagePreview = document.getElementById('home-media-preview-image');
        const videoPreview = document.getElementById('home-media-preview-video');
        const mediaInput = document.getElementById('home-mediaInput');
        
        if (!previewContainer || !imagePreview || !videoPreview || !mediaInput) return;
        
        // Clean up object URLs
        if (imagePreview.src) URL.revokeObjectURL(imagePreview.src);
        if (videoPreview.src) URL.revokeObjectURL(videoPreview.src);
        
        previewContainer.classList.add('hidden');
        imagePreview.classList.add('hidden');
        videoPreview.classList.add('hidden');
        imagePreview.src = '';
        videoPreview.src = '';
        mediaInput.value = '';
      } catch (error) {
        console.error('Error removing media preview:', error);
      }
    },
    
    // Character counter
    updateCharCount: function() {
      try {
        const textarea = document.getElementById('home-tweet-textarea');
        const counter = document.getElementById('home-char-counter');
        const button = document.getElementById('home-tweet-button');
        
        if (!textarea || !counter || !button) return;
        
        const charCount = textarea.value.trim().length;
        counter.textContent = `${charCount}/280`;
        
        // Update counter color
        const remaining = 280 - charCount;
        counter.classList.remove('text-gray-500', 'text-yellow-500', 'text-red-500');
        
        if (remaining < 0) {
          counter.classList.add('text-red-500');
        } else if (remaining <= 30) {
          counter.classList.add('text-yellow-500');
        } else {
          counter.classList.add('text-gray-500');
        }
        
        button.disabled = charCount === 0 || charCount > 280;
      } catch (error) {
        console.error('Error updating character count:', error);
      }
    }
  };

  // Initialize when DOM is ready
  document.addEventListener('DOMContentLoaded', function() {
    // Form submission handler
    document.getElementById('home-tweet-form')?.addEventListener('submit', async function(e) {
      e.preventDefault();
      const form = e.target;
      
      try {
        const submitButton = form.querySelector('button[type="submit"]');
        if (submitButton) submitButton.disabled = true;
        
        const formData = new FormData(form);
        const csrfToken = document.querySelector('meta[name="csrf-token"]')?.content || 
                         form.querySelector('[name="_csrf"]')?.value;
        
        if (!csrfToken) throw new Error('CSRF token not found');
        
        const response = await fetch(form.action, {
          method: 'POST',
          body: formData,
          headers: {
            'Accept': 'application/json',
            'X-CSRF-Token': csrfToken
          }
        });
        
        if (response.ok) {
          form.reset();
          window.homeTweetForm.removeMediaPreview();
          window.homeTweetForm.updateCharCount();
          window.location.reload();
        } else {
          const errorData = await response.json().catch(() => ({}));
          console.error('Tweet failed:', response.status, errorData);
          alert(`Failed to post tweet: ${errorData.message || 'Unknown error'}`);
        }
      } catch (error) {
        console.error('Network error:', error);
        alert('Network error occurred. Please try again.');
      } finally {
        const submitButton = form.querySelector('button[type="submit"]');
        if (submitButton) submitButton.disabled = false;
      }
    });
    
    // Initialize character counter
    const textarea = document.getElementById('home-tweet-textarea');
    if (textarea) {
      textarea.addEventListener('input', function() {
        window.homeTweetForm.updateCharCount();
      });
      window.homeTweetForm.updateCharCount();
    }
  });
  </script>
</body>
</html>